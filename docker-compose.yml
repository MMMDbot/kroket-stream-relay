---
version: '3.8'
services:
  redis:
    image: redis
    command: redis-server
    ports:
      - '6379:6379'
    networks:
      - redis

  rq-dashboard:
    image: eoranged/rq-dashboard
    ports:
      - '9182:9182'
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://kroket-stream-relay_redis_1:6379
    networks:
      - redis

  postgres:
    image: postgres:13.5-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: kroket
    volumes:
    # Enable if data is already present in local machine
    #  - './DB_DATA:/var/lib/postgresql/data'
    #Â Enable to automatically load sql backup. Beware: Changes will not be saved.
      - './db_demo.sql:/docker-entrypoint-initdb.d/db.sql'
    ports:
      - '5432:5432'
    networks:
      - redis

  api:
    volumes:
      - './STREAMS_DATA:/app/public/'
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api-kroket-demo.rule=Host(`api.kroket.demo.arturobracero.com`)"
        - "traefik.http.routers.api-kroket-demo.entrypoints=websecure"
        - "traefik.http.routers.api-kroket-demo.tls.certresolver=myresolver"
        - "traefik.http.services.api-kroket-demo.loadbalancer.server.port=3001"
        - "traefik.docker.network=traefik"
    ports:
      - '3001:3001'
    depends_on:
      - redis
    networks:
      - traefik
      - redis

  ingest:
    volumes:
      - './STREAMS_DATA:/app/public'
    depends_on:
        - redis
    restart: always
    deploy:
        replicas: 1
    networks:
        - redis

  relay:
    volumes:
      - './STREAMS_DATA:/app/public'
    depends_on:
        - redis
    restart: always
    deploy:
        replicas: 2
    networks:
        - redis

  thumbnails:
    volumes:
      - './STREAMS_DATA:/app/public'
    depends_on:
        - redis
    restart: always
    deploy:
        replicas: 1
    networks:
        - redis

  frontend:
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.kroket-demo.rule=Host(`kroket.demo.arturobracero.com`)"
        - "traefik.http.routers.kroket-demo.entrypoints=websecure"
        - "traefik.http.routers.kroket-demo.tls.certresolver=myresolver"
        - "traefik.http.services.kroket-demo.loadbalancer.server.port=8085"
    restart: always
    ports:
        - '8085:8085'
    networks:
        - traefik
networks:
  redis:
    name: redis
  traefik:
    external: true
    name: traefik

